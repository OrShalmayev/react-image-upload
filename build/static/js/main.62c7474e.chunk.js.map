{"version":3,"sources":["context/index.js","assets/images/image.svg","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","file","dragging","uploading","isUploaded","uploadedFileName","error","setContextState","AppContextPorivder","props","initState","updatedState","appContextsetState","appContextState","useState","Provider","value","children","useStyles","makeStyles","container","maxWidth","minHeight","padding","background","border","borderRadius","boxShadow","color","upload","display","alignItems","justifyContent","flexDirection","margin","width","backgroundColor","transition","opacity","marginBottom","choose_file","alignSelf","fontSize","textTransform","h","textAlign","p","App","appState","useContext","useEffect","console","log","Main","Upload","dropRef","useRef","dragCounter","config","headers","current","addEventListener","handleDragEnter","handleDragOut","handleDragOver","handleDrop","main","client","axios","create","baseURL","timeout","e","preventDefault","stopPropagation","dataTransfer","items","length","files","formData","FormData","append","post","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","then","res","data","setTimeout","window","location","origin","catch","err","Error","clearData","Fragment","Box","className","Container","Typography","paragraph","ref","src","image","alt","Button","variant","Loading","UploadedSuccessfully","CircularProgress","disableShrink","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62c7474e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const AppContext = React.createContext({\r\n    file: null,\r\n    dragging: false,\r\n    uploading: false,\r\n    isUploaded: false,\r\n    uploadedFileName: null,\r\n    error: null,\r\n    setContextState: ()=> {}\r\n});\r\n\r\nexport const AppContextPorivder = function(props){\r\n    const setContextState = (updatedState) => {\r\n        appContextsetState({\r\n            ...appContextState, \r\n            ...updatedState\r\n        });\r\n    }\r\n\r\n    const initState = {\r\n        file: null,\r\n        dragging: false,\r\n        uploading: false,\r\n        error: null,\r\n        setContextState\r\n    } \r\n\r\n    const [appContextState, appContextsetState] = React.useState(initState)\r\n\r\n    return (\r\n        <AppContext.Provider value={appContextState}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/image.3710b8a3.svg\";","import React from 'react';\n\n// Packages\nimport axios  from 'axios'\n// CSS\nimport './App.css';\n\n// Components\n\n// Context\nimport {AppContextPorivder, AppContext} from './context';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Images\nimport image from './assets/images/image.svg';\n\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: '30%',\n    minHeight: '50%',\n    padding: '2rem',\n    background: '#fff',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n  },\n  upload: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    margin: '2rem auto',\n    padding: '2rem',\n    width: '85%',\n    minHeight: '20rem',\n    border: '2px dashed #929292',\n    borderRadius: '13px',\n    backgroundColor: '#e6e6e6',\n    transition: \"all 0.3s ease-in-out\",\n    \"&.active\": {\n      border: '3px dashed green',\n      opacity: '0.8',\n    },\n    \"& > *:not(:last-child)\": {\n      marginBottom: '3rem'\n    },\n    \"&-img\": {\n      maxWidth: '10rem',\n    }\n  },\n\n  // upload btn\n  choose_file: {\n    width: '50%',\n    alignSelf: 'center',\n    fontSize: '1.5rem',\n    textTransform: 'none'\n  },\n  // Typography\n  h: {\n    \"&--1\": {\n      fontSize: '3rem',\n      color: '#000',\n      textAlign: 'center'\n    }\n  },//END headlines\n  p: {\n    \"&--1\": {\n      color: '#000',\n      fontSize: '1.5rem'\n    },\n    \"&--2\": {\n      color: '#929292',\n      fontSize: '1.3rem'\n    }\n  }//END paragraphs\n});\n\nfunction App() {\n  const appState = React.useContext(AppContext)\n\n  React.useEffect(()=>{\n    console.log('App State', appState)\n  },[appState])\n\n  return (\n    <AppContextPorivder>\n      <App.Main/>\n    </AppContextPorivder>\n  );\n}\n\nfunction Loading (){\n  const main = useStyles();\n  return (\n    <Box className=\"App\">\n      <Container className={main.container}>\n        <Typography className={`${main.p}--1`} paragraph=\"true\">Uploading...</Typography>\n        <CircularProgress disableShrink />\n      </Container>\n    </Box>\n  )\n}\n\nfunction Main(){\n  const appState = React.useContext(AppContext)\n  React.useEffect(()=>{\n    console.log('Main State', appState)\n  },[appState])\n\n  return (\n    <React.Fragment>\n      {\n        appState.uploading===true\n          ?\n            <App.Loading></App.Loading>\n          :\n          appState.isUploaded ?\n            <App.UploadedSuccessfully/>\n            :\n            <App.Upload></App.Upload>\n      }\n    </React.Fragment>\n  );\n}\n\nfunction Upload (){\n  const appState = React.useContext(AppContext)\n  \n    // REF\n    const dropRef = React.useRef();\n    let dragCounter = React.useRef(0);\n    const config = React.useRef({\n      headers: {\n          'content-type': 'multipart/form-data'\n      }\n    });\n  \n    // Component LifeCycle\n    React.useEffect(()=>{\n      console.log('appState updated', appState)\n    }, [appState])\n    React.useEffect(()=>{\n      dropRef.current.addEventListener('dragenter', handleDragEnter);\n      dropRef.current.addEventListener('dragleave', handleDragOut);\n      dropRef.current.addEventListener('dragover', handleDragOver);\n      dropRef.current.addEventListener('drop', handleDrop);\n      // Component will unmount\n      return () => {\n        // remove listeners\n        // dropRef.removeEventListener('dragenter', handleDragEnter);\n        // dropRef.removeEventListener('dragleave', handleDragOut);\n        // dropRef.removeEventListener('dragover', handleDragOver);\n        // dropRef.removeEventListener('drop', handleDrop);\n      }\n    },[]);\n    \n  \n    React.useEffect(()=>{\n      console.log('files updated', appState.file)\n    },[appState.file])\n  \n      // Styles\n      const main = useStyles();\n  \n    // Axios\n    const client = axios.create({\n      baseURL: 'http://localhost:8000',\n      timeout: 20000\n    })\n    /**\n     * Helpers\n     */\n    const handleDragOver = (e)=> {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  \n    const handleDragEnter = (e)=> {\n      e.preventDefault();\n      e.stopPropagation();\n      // console.log('dragenter',e)\n      if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n        // console.log(e.dataTransfer.items)\n        dragCounter++;\n        appState.setContextState(({\n            dragging: true,\n            file: e.dataTransfer.files[0],\n            error: null\n          })\n        );//END setState\n      }\n    }\n    \n    const handleDragOut = (e)=> {\n      e.preventDefault();\n      e.stopPropagation();\n      // console.log('leave',e)\n      dragCounter--;\n  \n      if (dragCounter>0) return;\n  \n      appState.setContextState(({\n          dragging: false\n      }));//END setState\n    }\n  \n    const handleDrop = (e)=> {\n      e.preventDefault();\n      e.stopPropagation();\n      if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n        const formData = new FormData();\n        formData.append('myImage', e.dataTransfer.files[0]);\n        appState.setContextState(({\n          uploading: true\n        }));\n        // send to the server the img file\n        client.post('/upload', formData, {\n          config,\n          onUploadProgress: function(progressEvent) {\n            console.log('progressEvent', progressEvent);\n            var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            console.log('percentCompleted', percentCompleted);\n          }\n        }).then(res=>{\n          console.log('response:****', res.data)\n          setTimeout(()=>{\n            appState.setContextState(({\n                uploading: false,\n                isUploaded: true,\n                uploadedFileName: `${window.location.origin}/assets/images/${res.data}`,\n                error: null\n            }));\n          }, 1000);\n        }).catch(err=> {\n            appState.setContextState(({\n                uploading: false,\n                error: true\n            }));\n            console.log(new Error(err));\n        });\n        e.dataTransfer.clearData()\n        dragCounter = 0\n        appState.setContextState(({\n            dragging: false,\n            uploading: true,\n            file: e.dataTransfer.files[0],\n            error: null\n        }));//END setState\n      }\n    }\n  return (\n    <React.Fragment>\n      <Box className=\"App\">\n        <Container className={main.container}>\n          <Typography className={`${main.p}--1`} paragraph=\"true\">Upload your image</Typography>\n          <Box className={`${main.upload} ${appState.dragging ? 'active' : ''}`} ref={dropRef}>\n            <img className={`${main.upload}-img`} src={image} alt=\"mountains\"/>\n            <Typography className={`${main.p}--2`} paragraph=\"true\">File should be Jpeg, Png</Typography>\n          </Box>\n          <Button className={main.choose_file} variant=\"contained\" color=\"primary\">\n            Choose a file\n          </Button>\n        </Container>\n      </Box>\n    </React.Fragment>\n  )\n}\n\nfunction UploadedSuccessfully(){\n  const appState = React.useContext(AppContext)\n\n  const main = useStyles();\n\n  return (\n    <React.Fragment>\n      <Box className=\"App\">\n        <Container className={main.container}>\n          <Typography className={`${main.p}--1`} paragraph=\"true\">Uploaded Successfully</Typography>\n          <Box className={`${main.upload}`}>\n            <img className={`${main.upload}-img`} src={`${appState.uploadedFileName}`} alt=\"mountains\"/>\n            <Typography className={`${main.p}--2`} paragraph=\"true\">File should be Jpeg, Png</Typography>\n          </Box>\n          <Button className={main.choose_file} variant=\"contained\" color=\"primary\">\n            Choose a file\n          </Button>\n        </Container>\n      </Box>\n    </React.Fragment>\n  )\n}\n\nfunction Error() {\n  const main = useStyles();\n  return (\n    <Typography className={`${main.p}--1`} paragraph=\"true\">Error</Typography>\n  )\n}\nApp.Main = Main;\nApp.Upload = Upload;\nApp.UploadedSuccessfully = UploadedSuccessfully;\nApp.Loading = Loading;\nApp.Error = Upload;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}